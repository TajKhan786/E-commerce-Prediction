#Import data

data <‐ read.csv("C:\\Users\\taj khan\\Desktop\\data_2.csv",header = T)
View(data)
dim(data)
head(data)
names(data)[names(data) == 'dimension1'] <‐ 'visitorId'


data<-subset(data,select = c(1,2,5:11))
Mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}
Mode(data$medium)

levels(data$medium)
library(plyr)
revalue(data$medium, c("(none)" = "organic"))<- data$medium

#No

data$landingPagePath <‐ gsub("\\?.*","",data$landingPagePath)
data$landingPagePath <‐ gsub("http://pingax.com/","",data$landingPagePath)
data$exitPagePath <‐ gsub("\\?.*","",data$exitPagePath)
data$exitPagePath <‐ gsub("http://pingax.com/","",data$exitPagePath)
head(data$landingPagePath)

#revisit
data$revisit <‐ as.numeric(data$sessionCount>1&data$daysSinceLastSession<7)
head(data$revisit)

#remove uid
data <‐ data[,‐1]



index <‐ sample(1:nrow(data),size=nrow(data)*0.70)
train_data <‐ data[index,]
test_data <‐ data[‐index,]
table(train_data$revisit)
table(test_data$revisit)
head(train_data)
model <‐ glm(train_data$revisit~.,data=train_data,family = binomial("logit"))
summary(model)



newdata=test_data[,‐ncol(test_data)]
head(newdata)
dim(newdata)

#predict on test data

predict<‐ predict(model,newdata,type="response")
test.predicted <‐ round(predict)

#No
fitted.results <- ifelse(predict > 0.5,1,0)
misClasificError <- mean(fitted.results !=test_data$revisit)
print(paste('Accuracy',1-misClasificError))

#confusion matrix
confusion_matrix <‐ table(test_data$revisit,test.predicted)
confusion_matrix

#Model Accuracy
accuracy <‐ sum(diag(confusion_matrix))*100/nrow(test_data)
accuracy
#ROC

pr <‐ prediction(predict,test_data$revisit)
prf <‐ performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc <‐ performance(pr, measure = "auc")
auc <‐ auc@y.values[[1]]
auc

submit<- cbind(test_data$visitorId,test_data$revisit,test.predicted)
